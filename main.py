import logging
import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    CallbackContext,
)
from phone_api import get_phone_info  # –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–º–µ—Ä–æ–≤

from dotenv import load_dotenv
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
(
    MAIN_MENU,
    TABLE_NAME_AGE,
    TABLE_NATION,
    TABLE_JOB,
    TABLE_PLACE_TIME,
    TABLE_PHONE,
    TABLE_EXTRA,
    GIRL_NAME_AGE,
    GIRL_NATION,
    GIRL_JOB,
    PHONE_INPUT
) = range(11)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_menu_markup = ReplyKeyboardMarkup(
    [["üìù –û–±—ã—á–Ω–∞—è –∞–Ω–∫–µ—Ç–∞", "üõ† –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏", "üîç –ú–∏–Ω–∏ –∑–∞–ø—Ä–æ—Å"]],
    resize_keyboard=True,
    one_time_keyboard=True
)


# ================== –û–°–ù–û–í–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ================== #
async def start(update: Update, context: CallbackContext) -> int:
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç üåü\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_markup
    )
    return MAIN_MENU


async def main_menu(update: Update, context: CallbackContext) -> int:
    choice = update.message.text

    if choice == "üìù –û–±—ã—á–Ω–∞—è –∞–Ω–∫–µ—Ç–∞":
        await update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É üåü\n1) –ò–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç —Å—Ç–æ–ª–∞:",
            reply_markup=ReplyKeyboardRemove()
        )
        return TABLE_NAME_AGE

    elif choice == "üõ† –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏":
        await update.message.reply_text(
            "üìû –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏: @gooooodyyyy",
            reply_markup=main_menu_markup
        )
        return MAIN_MENU

    elif choice == "üîç –ú–∏–Ω–∏ –∑–∞–ø—Ä–æ—Å":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n–ü—Ä–∏–º–µ—Ä: +79123456789",
            reply_markup=ReplyKeyboardRemove()
        )
        return PHONE_INPUT

    else:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é üëá", reply_markup=main_menu_markup)
        return MAIN_MENU


# ================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ê–ù–ö–ï–¢–´ ================== #
async def table_name_age(update: Update, context: CallbackContext) -> int:
    context.user_data["table_name_age"] = update.message.text
    await update.message.reply_text("2) –ù–∞—Ü–∏—è —Å—Ç–æ–ª–∞:")
    return TABLE_NATION


async def table_nation(update: Update, context: CallbackContext) -> int:
    context.user_data["table_nation"] = update.message.text
    await update.message.reply_text("3) –ü—Ä–æ—Ñ–µ—Å—Å–∏—è:")
    return TABLE_JOB


async def table_job(update: Update, context: CallbackContext) -> int:
    context.user_data["table_job"] = update.message.text
    await update.message.reply_text("4) –ú–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏:")
    return TABLE_PLACE_TIME


async def table_place_time(update: Update, context: CallbackContext) -> int:
    context.user_data["table_place_time"] = update.message.text
    await update.message.reply_text("5) –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return TABLE_PHONE


async def table_phone(update: Update, context: CallbackContext) -> int:
    context.user_data["table_phone"] = update.message.text
    await update.message.reply_text("6) –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–ª–µ –∏ –ø—Ä–æ–≥—Ä–µ–≤:")
    return TABLE_EXTRA


async def table_extra(update: Update, context: CallbackContext) -> int:
    context.user_data["table_extra"] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–≤—É—à–∫–µ:\n1) –ï–µ –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç:")
    return GIRL_NAME_AGE


async def girl_name_age(update: Update, context: CallbackContext) -> int:
    context.user_data["girl_name_age"] = update.message.text
    await update.message.reply_text("2) –ù–∞—Ü–∏—è –¥–µ–≤—É—à–∫–∏:")
    return GIRL_NATION


async def girl_nation(update: Update, context: CallbackContext) -> int:
    context.user_data["girl_nation"] = update.message.text
    await update.message.reply_text("3) –†–∞–±–æ—Ç–∞ –¥–µ–≤—É—à–∫–∏:")
    return GIRL_JOB


async def girl_job(update: Update, context: CallbackContext) -> int:
    context.user_data["girl_job"] = update.message.text

    result = (
        "‚úÖ –ê–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞:\n\n"
        "üßë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–ª–µ:\n"
        f"1) {context.user_data['table_name_age']}\n"
        f"2) {context.user_data['table_nation']}\n"
        f"3) {context.user_data['table_job']}\n"
        f"4) {context.user_data['table_place_time']}\n"
        f"5) {context.user_data['table_phone']}\n"
        f"6) {context.user_data['table_extra']}\n\n"
        "üë© –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–≤—É—à–∫–µ:\n"
        f"1) {context.user_data['girl_name_age']}\n"
        f"2) {context.user_data['girl_nation']}\n"
        f"3) {context.user_data['girl_job']}"
    )

    await update.message.reply_text(result, reply_markup=main_menu_markup)
    return ConversationHandler.END


# ================== –û–ë–†–ê–ë–û–¢–ß–ò–ö –ó–ê–ü–†–û–°–ê –ù–û–ú–ï–†–ê ================== #
async def phone_input(update: Update, context: CallbackContext) -> int:
    phone = update.message.text
    info = get_phone_info(phone)

    if 'error' in info:
        response = f"‚ùå –û—à–∏–±–∫–∞: {info['error']}"
    elif not info.get('valid', False):
        response = "‚ö†Ô∏è –ù–æ–º–µ—Ä –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else:
        response = (
            "üì± –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:\n"
            f"‚Ä¢ –ù–æ–º–µ—Ä: {info.get('number', '–ù/–î')}\n"
            f"‚Ä¢ –°—Ç—Ä–∞–Ω–∞: {info.get('country', '–ù/–î')}\n"
            f"‚Ä¢ –û–ø–µ—Ä–∞—Ç–æ—Ä: {info.get('operator', '–ù/–î')}\n"
            f"‚Ä¢ –¢–∏–ø: {info.get('type', '–ù/–î')}"
        )

    await update.message.reply_text(response, reply_markup=main_menu_markup)
    return MAIN_MENU


# ================== –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò ================== #
async def cancel(update: Update, context: CallbackContext) -> int:
    await update.message.reply_text(
        "‚ùå –î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –º–µ–Ω—é",
        reply_markup=main_menu_markup
    )
    return MAIN_MENU


async def error_handler(update: Update, context: CallbackContext) -> None:
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")
    await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π /start")


# ================== –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ================== #
def main() -> None:
    application = ApplicationBuilder().token(os.getenv("8145461036:AAG1GH5SeLq_Dl_cqgJDf1WqaSj3o4ceaSs")).build()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            MAIN_MENU: [MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu)],
            TABLE_NAME_AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_name_age)],
            TABLE_NATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_nation)],
            TABLE_JOB: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_job)],
            TABLE_PLACE_TIME: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_place_time)],
            TABLE_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_phone)],
            TABLE_EXTRA: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_extra)],
            GIRL_NAME_AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, girl_name_age)],
            GIRL_NATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, girl_nation)],
            GIRL_JOB: [MessageHandler(filters.TEXT & ~filters.COMMAND, girl_job)],
            PHONE_INPUT: [MessageHandler(filters.TEXT & ~filters.COMMAND, phone_input)]
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)
    application.add_error_handler(error_handler)
    application.run_polling()


if __name__ == "__main__":
    main()
