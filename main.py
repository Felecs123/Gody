import logging
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    CallbackContext,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
(
    MAIN_MENU,
    TABLE_NAME_AGE,
    TABLE_NATION,
    TABLE_JOB,
    TABLE_PLACE_TIME,
    TABLE_PHONE,
    TABLE_EXTRA,
    GIRL_NAME_AGE,
    GIRL_NATION,
    GIRL_JOB,
) = range(10)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_menu_markup = ReplyKeyboardMarkup(
    [['üìù –û–±—ã—á–Ω–∞—è –∞–Ω–∫–µ—Ç–∞', 'üõ† –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏']],
    resize_keyboard=True,
    one_time_keyboard=True
)

# ================== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ================== #
async def start(update: Update, context: CallbackContext) -> int:
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã, –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∫–µ—Ç üåü\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_markup
    )
    return MAIN_MENU

async def main_menu(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é"""
    user_choice = update.message.text
    
    if user_choice == 'üìù –û–±—ã—á–Ω–∞—è –∞–Ω–∫–µ—Ç–∞':
        await update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É üåü\n1) –ò–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç —Å—Ç–æ–ª–∞:",
            reply_markup=ReplyKeyboardRemove()
        )
        return TABLE_NAME_AGE
        
    elif user_choice == 'üõ† –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏':
        await update.message.reply_text(
            "üìû –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏: @gooooodyyyy",
            reply_markup=main_menu_markup
        )
        return MAIN_MENU
        
    else:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é üëá", reply_markup=main_menu_markup)
        return MAIN_MENU

# ========== –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–Ω–∫–µ—Ç—ã ========== #
async def table_name_age(update: Update, context: CallbackContext) -> int:
    context.user_data['table_name_age'] = update.message.text
    await update.message.reply_text("2) –ù–∞—Ü–∏—è —Å—Ç–æ–ª–∞:")
    return TABLE_NATION

async def table_nation(update: Update, context: CallbackContext) -> int:
    context.user_data['table_nation'] = update.message.text
    await update.message.reply_text("3) –ü—Ä–æ—Ñ–µ—Å—Å–∏—è:")
    return TABLE_JOB

async def table_job(update: Update, context: CallbackContext) -> int:
    context.user_data['table_job'] = update.message.text
    await update.message.reply_text("4) –ú–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏:")
    return TABLE_PLACE_TIME

async def table_place_time(update: Update, context: CallbackContext) -> int:
    context.user_data['table_place_time'] = update.message.text
    await update.message.reply_text("5) –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return TABLE_PHONE

async def table_phone(update: Update, context: CallbackContext) -> int:
    context.user_data['table_phone'] = update.message.text
    await update.message.reply_text("6) –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–ª–µ –∏ –ø—Ä–æ–≥—Ä–µ–≤:")
    return TABLE_EXTRA

async def table_extra(update: Update, context: CallbackContext) -> int:
    context.user_data['table_extra'] = update.message.text
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–≤—É—à–∫–µ:\n1) –ï–µ –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç:")
    return GIRL_NAME_AGE

async def girl_name_age(update: Update, context: CallbackContext) -> int:
    context.user_data['girl_name_age'] = update.message.text
    await update.message.reply_text("2) –ù–∞—Ü–∏—è –¥–µ–≤—É—à–∫–∏:")
    return GIRL_NATION

async def girl_nation(update: Update, context: CallbackContext) -> int:
    context.user_data['girl_nation'] = update.message.text
    await update.message.reply_text("3) –†–∞–±–æ—Ç–∞ –¥–µ–≤—É—à–∫–∏:")
    return GIRL_JOB

async def girl_job(update: Update, context: CallbackContext) -> int:
    context.user_data['girl_job'] = update.message.text
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∞–Ω–∫–µ—Ç—É
    result = (
        "‚úÖ –ê–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞:\n\n"
        "üßë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–ª–µ:\n"
        f"1) {context.user_data['table_name_age']}\n"
        f"2) {context.user_data['table_nation']}\n"
        f"3) {context.user_data['table_job']}\n"
        f"4) {context.user_data['table_place_time']}\n"
        f"5) {context.user_data['table_phone']}\n"
        f"6) {context.user_data['table_extra']}\n\n"
        "üë© –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–≤—É—à–∫–µ:\n"
        f"1) {context.user_data['girl_name_age']}\n"
        f"2) {context.user_data['girl_nation']}\n"
        f"3) {context.user_data['girl_job']}"
    )
    
    await update.message.reply_text(result, reply_markup=main_menu_markup)
    return ConversationHandler.END

async def cancel(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /cancel"""
    await update.message.reply_text(
        "–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†",
        reply_markup=main_menu_markup
    )
    return MAIN_MENU

async def error_handler(update: Update, context: CallbackContext) -> None:
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")
    await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start")

# ================== –ó–∞–ø—É—Å–∫ ================== #
def main() -> None:
    application = ApplicationBuilder().token("8145461036:AAG1GH5SeLq_Dl_cqgJDf1WqaSj3o4ceaSs").build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("cancel", cancel))

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            MAIN_MENU: [MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu)],
            TABLE_NAME_AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_name_age)],
            TABLE_NATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_nation)],
            TABLE_JOB: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_job)],
            TABLE_PLACE_TIME: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_place_time)],
            TABLE_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_phone)],
            TABLE_EXTRA: [MessageHandler(filters.TEXT & ~filters.COMMAND, table_extra)],
            GIRL_NAME_AGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, girl_name_age)],
            GIRL_NATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, girl_nation)],
            GIRL_JOB: [MessageHandler(filters.TEXT & ~filters.COMMAND, girl_job)],
        },
        fallbacks=[],
    )

    application.add_handler(conv_handler)
    application.add_error_handler(error_handler)
    application.run_polling()

if __name__ == '__main__':
    main()
